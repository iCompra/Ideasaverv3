"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/history/page",{

/***/ "(app-pages-browser)/./src/hooks/use-auth.tsx":
/*!********************************!*\
  !*** ./src/hooks/use-auth.tsx ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: function() { return /* binding */ AuthProvider; },\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/navigation.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_navigation__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _src_lib_supabaseClient__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/src/lib/supabaseClient */ \"(app-pages-browser)/./src/lib/supabaseClient.ts\");\n// src/hooks/use-auth.tsx\n/* __next_internal_client_entry_do_not_use__ AuthProvider,useAuth auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst AuthProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [profile, setProfile] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true); // Start true, set to false only after initial load/profile check\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.usePathname)();\n    // CRITICAL: Define handleProfileUpsert with optional additionalData parameter\n    const handleProfileUpsert = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async function(userId, userEmail) {\n        let additionalData = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        console.log(\"useAuth: Calling /api/profile for ID:\", userId, \"Email:\", userEmail, \"Additional Data:\", additionalData);\n        try {\n            const response = await fetch(\"/api/profile\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    userId,\n                    userEmail,\n                    ...additionalData\n                })\n            });\n            const result = await response.json();\n            console.log(\"useAuth: Response from /api/profile:\", response.status, result);\n            if (!response.ok || result.error) {\n                console.error(\"❌ useAuth: Error from /api/profile API response:\", result.error || \"Unknown API error\");\n                return null; // Indicate profile fetch/upsert failed\n            } else {\n                var _result_profile, _result_profile1;\n                console.log(\"✅ useAuth: Profile upserted/fetched successfully via API. Profile ID:\", (_result_profile = result.profile) === null || _result_profile === void 0 ? void 0 : _result_profile.id, \"Credits:\", (_result_profile1 = result.profile) === null || _result_profile1 === void 0 ? void 0 : _result_profile1.credits);\n                return result.profile;\n            }\n        } catch (fetchError) {\n            console.error(\"❌ useAuth: Network/Fetch error calling /api/profile:\", fetchError);\n            return null; // Indicate profile fetch/upsert failed due to network\n        }\n    }, []);\n    const updateCredits = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((newCredits)=>{\n        setProfile((prevProfile)=>{\n            if (prevProfile) {\n                return {\n                    ...prevProfile,\n                    credits: newCredits\n                };\n            }\n            return null;\n        });\n    }, []);\n    const signOut = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        setIsLoading(true); // Indicate loading for sign out action\n        await (0,_src_lib_supabaseClient__WEBPACK_IMPORTED_MODULE_3__.getSupabaseBrowserClient)().auth.signOut();\n        router.push(\"/\"); // Redirect after explicit sign out\n    }, [\n        router\n    ]);\n    // CRITICAL: Add refetchProfile function to force profile re-fetch\n    const refetchProfile = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async function() {\n        let additionalData = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        if (user && user.id && user.email) {\n            console.log(\"\\uD83D\\uDD04 useAuth: Forcing profile re-fetch/update for user:\", user.id, \"with data:\", additionalData);\n            const fetchedProfile = await handleProfileUpsert(user.id, user.email, additionalData);\n            setProfile(fetchedProfile);\n            console.log(\"\\uD83D\\uDD04 useAuth: Profile re-fetch completed. New profile state:\", fetchedProfile);\n        } else {\n            console.log(\"⚠️ useAuth: Cannot refetch profile, no user logged in or missing user data.\");\n        }\n    }, [\n        user,\n        handleProfileUpsert\n    ]);\n    // CRITICAL: Add updateProfile function for direct profile updates\n    const updateProfile = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (updateData)=>{\n        if (user && user.id && user.email) {\n            console.log(\"\\uD83D\\uDD04 useAuth: Updating profile for user:\", user.id, \"with data:\", updateData);\n            const updatedProfile = await handleProfileUpsert(user.id, user.email, updateData);\n            if (updatedProfile) {\n                setProfile(updatedProfile);\n                console.log(\"✅ useAuth: Profile updated successfully:\", updatedProfile);\n            }\n        } else {\n            console.log(\"⚠️ useAuth: Cannot update profile, no user logged in or missing user data.\");\n        }\n    }, [\n        user,\n        handleProfileUpsert\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"useAuth: useEffect started\");\n        const initializeAuthAndProfile = async ()=>{\n            console.log(\"\\uD83D\\uDD0D useAuth: Starting initial auth and profile initialization...\");\n            setIsLoading(true); // Ensure loading is true at start\n            const { data: { session }, error: sessionError } = await (0,_src_lib_supabaseClient__WEBPACK_IMPORTED_MODULE_3__.getSupabaseBrowserClient)().auth.getSession();\n            if (sessionError) {\n                console.error(\"❌ useAuth: Error getting initial session:\", sessionError);\n                setUser(null);\n                setProfile(null);\n            } else if (session === null || session === void 0 ? void 0 : session.user) {\n                console.log(\"✅ useAuth: Initial session found for user:\", session.user.id);\n                setUser(session.user);\n                const fetchedProfile = await handleProfileUpsert(session.user.id, session.user.email || \"\");\n                setProfile(fetchedProfile);\n            } else {\n                console.log(\"\\uD83D\\uDEAA useAuth: No initial session found.\");\n                setUser(null);\n                setProfile(null);\n            }\n            setIsLoading(false); // Set to false ONLY after initial session & profile check\n            console.log(\"\\uD83D\\uDD04 useAuth: Initial auth initialization complete. isLoading set to false.\");\n        };\n        initializeAuthAndProfile(); // Call on component mount\n        // Listener for subsequent auth state changes (login/logout actions, token refreshes)\n        const { data: authListener } = (0,_src_lib_supabaseClient__WEBPACK_IMPORTED_MODULE_3__.getSupabaseBrowserClient)().auth.onAuthStateChange(async (event, session)=>{\n            var _session_user;\n            console.log(\"useAuth: onAuthStateChange event:\", event);\n            console.log(\"\\uD83D\\uDD10 Auth State Change Event (from listener):\", event, \"User ID:\", (session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.id) || \"none\");\n            if (event === \"SIGNED_IN\" && (session === null || session === void 0 ? void 0 : session.user)) {\n                console.log(\"✅ useAuth (listener): User signed in. Re-fetching profile via API Route...\");\n                setUser(session.user);\n                const fetchedProfile = await handleProfileUpsert(session.user.id, session.user.email || \"\");\n                setProfile(fetchedProfile);\n                setIsLoading(false); // Ensure loading is off after a successful sign-in process\n            } else if (event === \"SIGNED_OUT\") {\n                console.log(\"\\uD83D\\uDEAA useAuth (listener): User signed out. Clearing state.\");\n                setUser(null);\n                setProfile(null);\n                setIsLoading(false); // Ensure loading is off after sign-out\n            }\n        // For other events (e.g., TOKEN_REFRESHED), the state should already be consistent, no re-fetch needed\n        });\n        return ()=>{\n            console.log(\"useAuth: useEffect cleanup\");\n            if (authListener && authListener.subscription) {\n                authListener.subscription.unsubscribe();\n            }\n        };\n    }, [\n        handleProfileUpsert\n    ]); // Include handleProfileUpsert in dependencies\n    // --- CRITICAL: Secondary useEffect for REDIRECTION based on profile state ---\n    // This runs whenever user, profile, or isLoading changes.\n    // This is the centralized redirection logic.\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!isLoading) {\n            if (user && profile) {\n                if (!profile.plan_selected) {\n                    if (pathname !== \"/pricing\") {\n                        console.log(\"\\uD83D\\uDD00 useAuth (global redirect): User has no plan selected. Redirecting from \".concat(pathname, \" to /pricing.\"));\n                        router.push(\"/pricing\");\n                    }\n                } else {\n                    if (pathname === \"/login\" || pathname === \"/\" || pathname === \"/pricing\") {\n                        console.log(\"\\uD83D\\uDD00 useAuth (global redirect): User authenticated with plan. Redirecting from \".concat(pathname, \" to /record.\"));\n                        router.push(\"/record\");\n                    }\n                }\n            } else if (!user) {\n                const protectedRoutes = [\n                    \"/record\",\n                    \"/settings\",\n                    \"/history\",\n                    \"/pricing\"\n                ];\n                // If on a protected route, redirect to login.\n                if (protectedRoutes.includes(pathname)) {\n                    console.log(\"\\uD83D\\uDD00 useAuth (global redirect): Unauthenticated user. Redirecting from \".concat(pathname, \" to /login.\"));\n                    router.push(\"/login\");\n                }\n            }\n        }\n    }, [\n        user,\n        profile,\n        isLoading,\n        pathname,\n        router\n    ]); // Depend on all state variables and router\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            user,\n            profile,\n            isLoading,\n            isAuthenticated: !!user,\n            updateCredits,\n            signOut,\n            refetchProfile,\n            updateProfile\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/project/src/hooks/use-auth.tsx\",\n        lineNumber: 196,\n        columnNumber: 5\n    }, undefined);\n};\n_s(AuthProvider, \"Kf/GLBpoxXcbyMNPuDUJz2G2Els=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter,\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.usePathname\n    ];\n});\n_c = AuthProvider;\nconst useAuth = ()=>{\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error(\"useAuth must be used within an AuthProvider\");\n    }\n    return context;\n};\n_s1(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/use-auth.tsx\n"));

/***/ })

});